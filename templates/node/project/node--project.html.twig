{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set container = theme.settings.fluid_container ? 'container-fluid' : 'container' %}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>


  {% if not page %}
    {{ title_prefix }}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
    {{ title_suffix }}
  {% else %}

    {% set bg_class = content.field_hero_style[0]['#markup'] == 'dark' ? 'bg-dark' : '' %}
    {% set bg_gradient = content.field_hero_style[0]['#markup'] == 'dark' ? 'linear-gradient(rgba(0, 0, 0, 0.45),rgba(0, 0, 0, 0.45)),' : '' %}
    {% set bg_url = file_url(content.field_hero_image|field_target_entity.uri.value) %}

    <div class="bg-image {{ bg_class }} bg-no-image">
      <div class="jumbotron {{ container }}">
        {% if content.field_display_title[0]['#markup'] %}
          <h1>{{ label }}</h1>
        {% endif %}
        {{ content.field_hero_text|field_value }}
        <p>
          <a href="/projets" class="btn btn-link btn-back-to-list">
            <i class="fa fa-arrow-left"></i>
            &emsp;
            Revenir Ã  la liste des projets
          </a>
        </p>
      </div>
    </div>

  {% endif %}



  {# Content #}
  {% block content %}
    <div {{ content_attributes.addClass('content') }}>

      {% if (content.field_form|field_raw('status') == 'open') or (content.field_form_comment|field_raw('status') == 'open') %}
        <div id="nav-project" class="{{container}}">
          <ul class="nav nav-pills nav-justified">
            <li>
              <a href="#tab-project-main" data-toggle="tab">
                <i class="fa fa-info-circle" aria-hidden="true"></i>
                &nbsp;
                {{ 'Informations'|t }}
              </a>
            </li>
            {% if content.field_form|field_raw('status') == 'open' %}
            <li class="nav-highlight">
              <a href="#tab-project-form" data-toggle="tab">
                <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                &nbsp;
                {{ 'Candidature'|t }}
              </a>
            </li>
            {% endif %}
            {% if content.field_form_comment|field_raw('status') == 'open' %}
            <li class="nav-highlight">
              <a href="#tab-project-forum" data-toggle="tab">
                <i class="fa fa-comment" aria-hidden="true"></i>
                &nbsp;
                {{ 'Avis citoyen'|t }}
              </a>
            </li>
            {% endif %}
          </ul>
        </div>

        <div id="nav-project-content" class="tab-content tab-content-node">
          <section class="tab-pane fade" id="tab-project-main">
            <div class="{{container}}">
              {% include 'node--project--info.html.twig' %}
            </div>
          </section>
          {% if content.field_form|field_raw('status') == 'open' %}
          <section class="tab-pane fade" id="tab-project-form">
            <div class="{{container}}">
                {{ content.field_form|field_value }}
            </div>
          </section>
          {% endif %}
          {% if content.field_form_comment|field_raw('status') == 'open' %}
          <section class="tab-pane fade" id="tab-project-forum">
            <div class="{{container}}">
                {{ content.field_form_comment|field_value }}
            </div>
          </section>
          {% endif %}
        </div>
      {% else %}
        <div class="{{container}}">
          {% include 'node--project--info.html.twig' %}
        </div>
      {% endif %}



    </div>
  {% endblock %}

</article>
